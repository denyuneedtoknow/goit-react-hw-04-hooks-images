{"version":3,"sources":["Components/ImageGalleryItem/ImageGalleryItem.module.css","Components/Modal/Modal.module.css","Components/Button/Button.module.css","Components/SearchBar/SearchBar.module.css","Components/SearchBar/SearchBar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/Modal/Modal.js","Components/Services/PicFinderAPI.js","Components/Button/Button.js","Components/ImageGallery/ImageGallery.js","App.js","index.js","Components/ImageGallery/ImageGallery.module.css"],"names":["module","exports","SearchBar","onSubmit","useState","keyword","setKeyword","className","s","Searchbar","SearchForm","e","preventDefault","trim","toast","error","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","value","onChange","event","currentTarget","toLowerCase","ImageGalleryItem","pictures","chosenPic","toggleModal","onItemClick","map","pic","onClick","src","webformatURL","alt","tags","largeImageURL","ImageGalleryItemPic","Modal","children","useEffect","window","addEventListener","handleEscape","removeEventListener","code","createPortal","Overlay","target","document","getElementById","fetchPictures","nextInputValue","baseApi","APIkey","nextPage","axios","get","then","r","data","hits","PropTypes","string","page","Button","onLoadMoreClick","ImageGallery","request","startPage","setPage","setPictures","setChosenPic","showModal","setShowModal","status","setStatus","setError","searchValue","setSearchValue","catch","chosePic","dataset","source","color","height","width","rejection","length","scrollTo","top","documentElement","scrollHeight","behavior","App","autoClose","ReactDOM","render","StrictMode"],"mappings":"oIACAA,EAAOC,QAAU,CAAC,iBAAmB,2CAA2C,oBAAsB,gD,mBCAtGD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,uB,mBCA3DD,EAAOC,QAAU,CAAC,OAAS,yB,4DCA3BD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,iBAAmB,oCAAoC,sBAAwB,yCAAyC,gBAAkB,qC,uICkDjOC,MA5Cf,YAAkC,IAAbC,EAAY,EAAZA,SAEjB,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAiBA,OACI,wBAAQC,UAAWC,IAAEC,UAArB,SACI,uBAAMF,UAAWC,IAAEE,WAAYP,SAblB,SAACQ,GAClBA,EAAEC,iBACqB,KAAnBP,EAAQQ,QAIZV,EAASE,GAETC,EAAW,KALPQ,IAAMC,MAAM,qBAUZ,UACI,wBAAQC,KAAK,SAAST,UAAWC,IAAES,iBAAnC,SACI,sBAAMV,UAAWC,IAAEU,sBAAnB,sBAEJ,uBACIX,UAAWC,IAAEW,gBACbH,KAAK,OACLI,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,MAAOlB,EACPmB,SA5BY,SAACC,GACzBnB,EAAWmB,EAAMC,cAAcH,MAAMI,wB,+CCP9B,SAASC,EAAT,GAAiE,IAArCC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,YAE9D,SAASC,EAAYrB,GACnBoB,IACAD,EAAUnB,GAGZ,OACE,mCACGkB,EAASI,KAAI,SAACC,GACb,OAAQ,oBAAIC,QAASH,EAAoCzB,UAAWC,IAAEoB,iBAA9D,SAAgF,qBAAKQ,IAAKF,EAAIG,aAAcC,IAAKJ,EAAIK,KAAM,cAAaL,EAAIM,cAAejC,UAAWC,IAAEiC,uBAAzIP,EAAIG,mB,sCC0BpCK,MAnCf,YAA2C,IAA1BX,EAAyB,EAAzBA,YAAaY,EAAY,EAAZA,SAC1BC,qBAAU,WAEN,OADAC,OAAOC,iBAAiB,UAAWC,GAC5B,WACHF,OAAOG,oBAAoB,UAAWD,OAK9C,IAAMA,EAAe,SAAApC,GACF,WAAXA,EAAEsC,MACFlB,KAYR,OAAOmB,uBACH,qBAAK3C,UAAWC,IAAE2C,QAAShB,QATX,SAAAxB,GACZA,EAAEe,gBAAkBf,EAAEyC,QACtBrB,KAOJ,SACI,qBAAKxB,UAAWC,IAAEkC,MAAlB,SAA0BC,MAE9BU,SAASC,eAAe,e,iCC9BzB,SAASC,EAAcC,EAAgBC,EAASC,EAAQC,GAE3D,OAAOC,IACFC,IADE,UAEIJ,EAFJ,gBAEmBC,EAFnB,iBAEkCC,EAFlC,cAEgDH,EAFhD,kCAIFM,MAAK,SAAAC,GAAO,OAAOA,EAAEC,KAAKC,QAGnCV,EAAcW,UAAY,CACtBV,eAAgBU,IAAUC,OAC1BV,QAASS,IAAUC,OACnBT,OAAQQ,IAAUC,OAClBC,KAAMF,IAAUC,Q,qBCXL,SAASE,EAAT,GAAsC,IAApBC,EAAmB,EAAnBA,gBAC7B,OACI,wBAAQ/D,UAAWC,IAAE6D,OAAQrD,KAAK,SAASmB,QAASmC,EAApD,uBCIR,IAAMb,EAAU,2BACVC,EAAS,qCAsHAa,MArHf,YAA+C,IAAvBC,EAAsB,EAAtBA,QAEpB,GAF0C,EAAbC,UAELrE,mBAAS,IAAjC,mBAAOgE,EAAP,KAAaM,EAAb,KACA,EAAgCtE,mBAAS,IAAzC,mBAAOyB,EAAP,KAAiB8C,EAAjB,KACA,EAAkCvE,mBAAS,IAA3C,mBAAO0B,EAAP,KAAkB8C,EAAlB,KACA,EAAkCxE,oBAAS,GAA3C,mBAAOyE,EAAP,KAAkBC,EAAlB,KACA,EAA4B1E,mBAAS,QAArC,mBAAO2E,EAAP,KAAeC,EAAf,KACA,EAA0B5E,mBAAS,MAAnC,mBAAOW,EAAP,KAAckE,EAAd,KACA,EAAsC7E,mBAAS,IAA/C,mBAAO8E,EAAP,KAAoBC,EAApB,KAIAvC,qBAAU,WAED4B,IAGLW,EAAeX,GAEXA,IAAYU,GACZR,EAAQ,GAIZM,EAAU,WAEVzB,EAAciB,EAASf,EAASC,EAAQU,GAEnCN,MAAK,SAACE,GACU,IAATI,GACAO,EAAY,YAAIX,IAEpBgB,EAAU,cAEXI,OAAM,SAAArE,GACLiE,EAAU,YACVC,EAASlE,SAElB,CAACmE,EAAaV,EAASJ,IAI1B,IAAMiB,EAAW,SAAA1E,GACbiE,EAAajE,EAAEyC,OAAOkC,QAAQC,SAG5BxD,EAAc,WAChB+C,GAAcD,IAmBlB,MAAe,SAAXE,EACO,wBAGI,YAAXA,EAGI,qCACI,oBAAIxE,UAAWC,IAAE+D,aAAjB,SACI,cAAC3C,EAAD,CAAkBC,SAAUA,EAAUC,UAAWuD,EAAUtD,YAAaA,MAE5E,cAAC,IAAD,CAAQf,KAAK,WAAWwE,MAAM,UAAUC,OAAQ,GAAIC,MAAO,QAIxD,aAAXX,EAEI,8BACI,qBAAKxE,UAAWC,IAAEmF,UAAlB,SAA8B5E,MAI3B,YAAXgE,EACwB,IAApBlD,EAAS+D,OAEL,8BACI,qBAAKrF,UAAWC,IAAEmF,UAAlB,uCAMR,qCACI,oBAAIpF,UAAWC,IAAE+D,aAAjB,SACI,cAAC3C,EAAD,CAAkBC,SAAUA,EAAUC,UAAWuD,EAAUtD,YAAaA,MAE3E8C,GACG,cAAC,EAAD,CAAO9C,YAAaA,EAApB,SACI,qBAAKxB,UAAU,aAAa6B,IAAKN,EAAWQ,IAAI,OAGxD,cAAC+B,EAAD,CAAQC,gBAvDI,WACpBI,EAAQN,EAAO,GACfb,EAAciB,EAASf,EAASC,EAAQU,EAAO,GAAGN,MAAK,SAACE,GACpDW,EAAY,GAAD,mBAAK9C,GAAL,YAAkBmC,KAC7BgB,EAAU,WACVnC,OAAOgD,SAAS,CACZC,IAAKzC,SAAS0C,gBAAgBC,aAC9BC,SAAU,yBA6BtB,GCxEWC,MArBf,WACI,MAA8B9F,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,MAAjC,mBAAOgE,EAAP,KAAaM,EAAb,KAUA,OACI,sBAAKnE,UAAU,MAAf,UACI,cAAC,EAAD,CAAWJ,SARM,SAACE,GACtBC,EAAWD,GACXqE,EAAQ,MAOJ,cAAC,EAAD,CAAcF,QAASnE,EAASoE,UAAWL,IAC3C,cAAC,IAAD,CAAgB+B,UAAW,UCnBvCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjD,SAASC,eAAe,U,kBCR1BtD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,UAAY,mC","file":"static/js/main.bd2b0b3d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2ZGdh\",\"ImageGalleryItemPic\":\"ImageGalleryItem_ImageGalleryItemPic__2wMrI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3ybRf\",\"Modal\":\"Modal_Modal__5yaJu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2pYmb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchBar_Searchbar__1ngr2\",\"SearchForm\":\"SearchBar_SearchForm__3aCc1\",\"SearchFormButton\":\"SearchBar_SearchFormButton__39Lsf\",\"SearchFormButtonLabel\":\"SearchBar_SearchFormButtonLabel__3-N4L\",\"SearchFormInput\":\"SearchBar_SearchFormInput__FmTDa\"};","import PropTypes from 'prop-types';\r\nimport { useState } from \"react\";\r\nimport s from \"./SearchBar.module.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n\r\nfunction SearchBar({ onSubmit }) {\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    const handleKeywordChange = (event) => {\r\n        setKeyword(event.currentTarget.value.toLowerCase());\r\n\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (keyword.trim() === \"\") {\r\n            toast.error(\"Enter something!\");\r\n            return;\r\n        }\r\n        onSubmit(keyword);\r\n\r\n        setKeyword(\"\");\r\n    };\r\n\r\n    return (\r\n        <header className={s.Searchbar}>\r\n            <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n                <button type=\"submit\" className={s.SearchFormButton}>\r\n                    <span className={s.SearchFormButtonLabel}>Search</span>\r\n                </button>\r\n                <input\r\n                    className={s.SearchFormInput}\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Search images and photos\"\r\n                    value={keyword}\r\n                    onChange={handleKeywordChange}\r\n                />\r\n            </form>\r\n        </header>\r\n    );\r\n}\r\n\r\nSearchBar.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n}\r\n\r\n\r\nexport default SearchBar","import PropTypes from 'prop-types';\r\nimport s from \"./ImageGalleryItem.module.css\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\n\r\nexport default function ImageGalleryItem({ pictures, chosenPic, toggleModal }) {\r\n\r\n  function onItemClick(e) {\r\n    toggleModal();\r\n    chosenPic(e);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {pictures.map((pic) => {\r\n        return (<li onClick={onItemClick} key={pic.webformatURL} className={s.ImageGalleryItem}><img src={pic.webformatURL} alt={pic.tags} data-source={pic.largeImageURL} className={s.ImageGalleryItemPic} /></li>)\r\n      })}\r\n    </>)\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string,\r\n  tags: PropTypes.string,\r\n  toggleModal: PropTypes.func,\r\n  chosenPic: PropTypes.func,\r\n  largeImageURL: PropTypes.string,\r\n};","import PropTypes from 'prop-types';\r\nimport { useEffect } from \"react\";\r\nimport { createPortal } from 'react-dom';\r\nimport s from \"./Modal.module.css\";\r\n\r\n\r\nfunction Modal({ toggleModal, children }) {\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handleEscape);\r\n        return () => {\r\n            window.removeEventListener('keydown', handleEscape);\r\n        };\r\n    });\r\n\r\n\r\n    const handleEscape = e => {\r\n        if (e.code === 'Escape') {\r\n            toggleModal();\r\n        }\r\n    };\r\n\r\n    const handleClose = e => {\r\n        if (e.currentTarget === e.target) {\r\n            toggleModal();\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return createPortal(\r\n        <div className={s.Overlay} onClick={handleClose}>\r\n            <div className={s.Modal}>{children}</div>\r\n        </div>,\r\n        document.getElementById('modalRoot'),\r\n    );\r\n}\r\n\r\nModal.propTypes = {\r\n    handleClose: PropTypes.func,\r\n}\r\n\r\nexport default Modal","import PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\n\r\nexport function fetchPictures(nextInputValue, baseApi, APIkey, nextPage) {\r\n\r\n    return axios\r\n        .get(\r\n            `${baseApi}?key=${APIkey}&page=${nextPage}&q=${nextInputValue}&image_type=photo&per_page=12`\r\n        )\r\n        .then(r => { return r.data.hits });\r\n\r\n}\r\nfetchPictures.PropTypes = {\r\n    nextInputValue: PropTypes.string,\r\n    baseApi: PropTypes.string,\r\n    APIkey: PropTypes.string,\r\n    page: PropTypes.string,\r\n}\r\n\r\n","import s from \"./Button.module.css\"\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nexport default function Button({ onLoadMoreClick }) {\r\n    return (\r\n        <button className={s.Button} type=\"button\" onClick={onLoadMoreClick}>\r\n            Load more\r\n        </button>\r\n    );\r\n}\r\nButton.propTypes = {\r\n    onLoadMoreClick: PropTypes.func,\r\n};","import s from \"./ImageGallery.module.css\";\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem'\r\nimport { useState, useEffect } from \"react\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Modal from '../Modal'\r\nimport { fetchPictures } from '../Services/PicFinderAPI';\r\nimport Button from '../Button/Button'\r\n\r\n\r\nconst baseApi = 'https://pixabay.com/api/';\r\nconst APIkey = '22968833-cf9b798f42870513c2372fa03';\r\nfunction ImageGallery({ request, startPage }) {\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [pictures, setPictures] = useState([]);\r\n    const [chosenPic, setChosenPic] = useState('');\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [status, setStatus] = useState('idle')\r\n    const [error, setError] = useState(null);\r\n    const [searchValue, setSearchValue] = useState('')\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (!request) {\r\n            return;\r\n        }\r\n        setSearchValue(request)\r\n\r\n        if (request !== searchValue) {\r\n            setPage(1)\r\n\r\n        }\r\n\r\n        setStatus('pending')\r\n\r\n        fetchPictures(request, baseApi, APIkey, page)\r\n\r\n            .then((data) => {\r\n                if (page === 1) {\r\n                    setPictures([...data])\r\n                }\r\n                setStatus('resolve')\r\n\r\n            }).catch(error => {\r\n                setStatus('rejected');\r\n                setError(error)\r\n            });\r\n    }, [searchValue, request, page])\r\n\r\n\r\n\r\n    const chosePic = e => {\r\n        setChosenPic(e.target.dataset.source)\r\n    };\r\n\r\n    const toggleModal = () => {\r\n        setShowModal(!showModal)\r\n\r\n    };\r\n\r\n\r\n    const onLoadMoreClick = () => {\r\n        setPage(page + 1)\r\n        fetchPictures(request, baseApi, APIkey, page + 1).then((data) => {\r\n            setPictures([...pictures, ...data])\r\n            setStatus('resolve')\r\n            window.scrollTo({\r\n                top: document.documentElement.scrollHeight,\r\n                behavior: 'smooth',\r\n            });\r\n        })\r\n\r\n    };\r\n\r\n\r\n    if (status === 'idle') {\r\n        return <div></div>;\r\n    }\r\n\r\n    if (status === 'pending') {\r\n\r\n        return (\r\n            <>\r\n                <ul className={s.ImageGallery}>\r\n                    <ImageGalleryItem pictures={pictures} chosenPic={chosePic} toggleModal={toggleModal} />\r\n                </ul>\r\n                <Loader type=\"TailSpin\" color=\"#00BFFF\" height={80} width={80} /></>\r\n        );\r\n    }\r\n\r\n    if (status === 'rejected') {\r\n        return (\r\n            <div>\r\n                <div className={s.rejection}>{error}</div>\r\n            </div>\r\n        )\r\n    }\r\n    if (status === 'resolve') {\r\n        if (pictures.length === 0) {\r\n            return (\r\n                <div>\r\n                    <div className={s.rejection}>Sorry, no matches found</div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <ul className={s.ImageGallery}>\r\n                    <ImageGalleryItem pictures={pictures} chosenPic={chosePic} toggleModal={toggleModal} />\r\n                </ul>\r\n                {showModal && (\r\n                    <Modal toggleModal={toggleModal}>\r\n                        <img className=\"modalImage\" src={chosenPic} alt=\"\" />\r\n                    </Modal>\r\n                )}\r\n                <Button onLoadMoreClick={onLoadMoreClick} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    request: PropTypes.string,\r\n};\r\n\r\nexport default ImageGallery","import { useState } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./App.css\";\r\nimport SearchBar from \"./Components/SearchBar\";\r\nimport ImageGallery from \"./Components/ImageGallery/ImageGallery\"\r\n\r\n\r\nfunction App() {\r\n    const [keyword, setKeyword] = useState('')\r\n    const [page, setPage] = useState(null)\r\n\r\n\r\n\r\n    const handleFormSubmit = (keyword) => {\r\n        setKeyword(keyword);\r\n        setPage(1)\r\n\r\n    };\r\n\r\n    return (\r\n        <div className='App'>\r\n            <SearchBar onSubmit={handleFormSubmit} />\r\n            <ImageGallery request={keyword} startPage={page} />\r\n            <ToastContainer autoClose={3000} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3pyWo\",\"rejection\":\"ImageGallery_rejection__1duDb\"};"],"sourceRoot":""}